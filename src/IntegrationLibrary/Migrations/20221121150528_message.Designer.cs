// <auto-generated />
using System;
using IntegrationLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntegrationLibrary.Migrations
{
    [DbContext(typeof(IntegrationDbContext))]
    [Migration("20221121150528_message")]
    partial class message
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("IntegrationLibery.News.Message", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("Timestamp");

                    b.ToTable("NewsTable");

                    b.HasData(
                        new
                        {
                            Timestamp = new DateTime(2022, 11, 21, 16, 5, 27, 508, DateTimeKind.Local).AddTicks(5446),
                            Id = new Guid("7b511c23-ed6e-4999-81a7-4e001474c4c2"),
                            Text = "doniraj krv"
                        });
                });

            modelBuilder.Entity("IntegrationLibrary.BloodBank.BloodBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apikey")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BloodBankTable");

                    b.HasData(
                        new
                        {
                            Id = new Guid("41021ad9-d16a-49b9-92e6-d75979ea375b"),
                            Apikey = "efwfe",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "edhb",
                            Username = "101A"
                        },
                        new
                        {
                            Id = new Guid("e21cb335-f629-40fa-bcb0-a7f24f890279"),
                            Apikey = "dqad",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "fewsfd",
                            Username = "101A"
                        },
                        new
                        {
                            Id = new Guid("581aab9d-809c-4a5c-94f3-74ffc2e4ce78"),
                            Apikey = "ads",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "fcsde",
                            Username = "101A"
                        });
                });

            modelBuilder.Entity("IntegrationLibrary.Report.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("BloodbankId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ConfigurationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastReportGeneration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
