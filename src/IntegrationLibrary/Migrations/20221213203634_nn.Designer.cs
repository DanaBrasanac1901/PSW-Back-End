// <auto-generated />
using System;
using IntegrationLibrary.Settings;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace IntegrationLibrary.Migrations
{
    [DbContext(typeof(IntegrationDbContext))]
    [Migration("20221213203634_nn")]
    partial class nn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("HospitalLibrary.Core.Tender.Tender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<double>("AmountOfA")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountOfAB")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountOfB")
                        .HasColumnType("double precision");

                    b.Property<double>("AmountOfO")
                        .HasColumnType("double precision");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HospitalName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tenders");
                });

            modelBuilder.Entity("HospitalLibrary.Core.TenderOffer.TenderOffer", b =>
                {
                    b.Property<Guid>("BloodBankId")
                        .HasColumnType("uuid");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.Property<int>("TenderId")
                        .HasColumnType("integer");

                    b.ToTable("TenderOffers");
                });

            modelBuilder.Entity("IntegrationLibery.News.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("NewsTable");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60eef45b-26ff-4b25-a473-f3707ea1deb4"),
                            Text = "doniraj krv",
                            Timestamp = new DateTime(2022, 12, 13, 21, 36, 34, 54, DateTimeKind.Local).AddTicks(1615)
                        });
                });

            modelBuilder.Entity("IntegrationLibrary.BloodBank.BloodBank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Apikey")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("BloodBankTable");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d4894b6-02e4-4288-a3d3-089489563190"),
                            Apikey = "efwfe",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "edhb",
                            Username = "101A"
                        },
                        new
                        {
                            Id = new Guid("55510651-d36e-444d-95fb-871e0902cd7e"),
                            Apikey = "dqad",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "fewsfd",
                            Username = "101A"
                        },
                        new
                        {
                            Id = new Guid("a60460fe-0d33-478d-93b3-45d424079e66"),
                            Apikey = "ads",
                            Email = "andykesic123@gmail.com",
                            IsConfirmed = true,
                            Password = "fcsde",
                            Username = "101A"
                        });
                });

            modelBuilder.Entity("IntegrationLibrary.Report.Report", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ConfigurationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastReportGeneration")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Period")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReportTable");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d4894b6-02e4-4288-a3d3-089489563190"),
                            ConfigurationDate = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastReportGeneration = new DateTime(2022, 11, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Period = 0
                        },
                        new
                        {
                            Id = new Guid("55510651-d36e-444d-95fb-871e0902cd7e"),
                            ConfigurationDate = new DateTime(2022, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastReportGeneration = new DateTime(2022, 10, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Period = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
